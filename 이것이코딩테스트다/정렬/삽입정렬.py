# 선택정렬은 뒤에 있는 걸 모두 다 확인해서 제일 작은 걸 현재 인덱스의 원소와 바꾼다. 
# 제일 작은 것을 '선택'한다. 

# 삽입정렬은 현재 인덱스 앞은 모두 정렬되어 있다고 생각하고 앞에서 맞는 위치에 '삽입'한다. 


# 삽입정렬의 시간복잡도 

# 삽입정렬도 선택정렬과 마찬가지로  O(N**2)의 시간복잡도를 가진다. (for문 두번 중첩)
# 그러나 항상 뒤의 것을 전부 확인하는 선택정렬과 다르게
# 삽입정렬은 내 위치를 찾으면 다음 걸로 넘어간다. 최선의 경우에는 O(N)의 시간복잡도를 가진다.
# 그러므로 거의 정렬되어 있는 경우에 삽입정렬은 유용하게 쓰인다. 


array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

# 맨 첫 원소는 비교할 대상이 없지. 그 자체로 정렬되어 있는 상태. 
for i in range(1, len(array)):
    for j in range(i, 0, -1):
        if array[j] < array[j-1]:
            array[j], array[j-1] = array[j-1], array[j]
        else:
            break
        
        
print(array)