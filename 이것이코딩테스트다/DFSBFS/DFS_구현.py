# DFS 메서드 정의
def dfs(graph, v, visited):
    # 현재 노드를 방문 처리 
    visited[v] = True
    # 방문한 노드를 순서대로 출력
    print(v, end=' ')
    
    # 현재 노드와 연결된 다른 노드가 방문된 적이 없으면 재귀 호출. 
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)
    # 연결된 모든 노드가 방문되었으면 호출 종료. 나를 호출한 함수로 리턴. 


# 그래프를 인접 리스트로 표현
# 인접 리스트 = 이차원 배열. 배열의 각 요소는 노드에 인접한 노드로 이루어진 배열임. 
# 노드는 1~8 여덟개지만 graph의 인덱스 = 노드 번호로 대입하므로 인덱스 0번은 빈 리스트. 
graph = [[], [2, 3, 8], [1, 7], [1, 4, 5], [3, 5], [3, 4], [7], [2, 6, 8], [1, 7]]

# 노드는 1~8 여덟개지만 visited의 인덱스 = 노드 번호로 대입하므로 인덱스 0번을 고려해서 원소를 9개
visited = [False]*9

dfs(graph, 1, visited)