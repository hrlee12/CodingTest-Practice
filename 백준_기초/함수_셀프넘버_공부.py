# 함수_셀프넘버



"""
함수 d
입력값 : 정수 n
기능 : 입력받은 정수 n 과 정수n의 각 자릿수를 더한 값을 출력한다.
출력값 : 입력받은 정수 n 과 정수n의 각 자릿수를 더한 값



하고자 하는 것 : 10,000 이하의 셀프 넘버를 한 줄에 하나씩 출력
                셀프 넘버란 함수 d(n) = x  일때 생성자 n이 존재하지 않는 수. 함수 d(n)으로 만들어질 수 없는 수 !


                
나의 방법 : 1 ~ 10,000 리스트를 만들고 1 ~ 10,000을 입력값으로 하는  출력값 d(n)을 1 ~ 10,000리스트에서 제거한다.       d(n)을 통과하면 자기자신을 더하기 때문에 자신보다 크다.
            그럼 리스트에 남는 수는 d(n)으로 출력되지 않는 셀프 넘버일 것 !
            -> 그러나 오답. 왜?

해답 : 1 ~ 10,000을 입력값으로 하는 출력값 d(n)을 리스트에 append한다.
        그리고 1~10,000 중에서 출력값의 리스트에 없는 값이면 셀프 넘버 -> 출력 !


이 두 방법이 뭐가 다른 것인지 잘 모르겠다.

-> 나의 방법도 정답. 과정은 맞으나 중간에 작은 실수를 했던 듯 싶다. 

"""


def d(num):
    result = sum(map(int, str(num)))
    result += num
    return result
    

number_all = list(range(1, 10001))

for i in range(1, 10001):
    try:
        number_all.remove(d(i))
    except ValueError:
        pass


for i in number_all:
    print(i)

        
